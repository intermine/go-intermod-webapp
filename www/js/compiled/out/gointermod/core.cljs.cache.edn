;; Analyzed by ClojureScript 1.7.170
{:use-macros nil, :excludes #{}, :name gointermod.core, :imports nil, :requires {reagent reagent.core, views gointermod.views, reagent.core reagent.core, routes gointermod.routes, gointermod.subs gointermod.subs, gointermod.routes gointermod.routes, config gointermod.config, gointermod.views gointermod.views, gointermod.config gointermod.config, gointermod.handlers gointermod.handlers, re-frame re-frame.core, re-frame.core re-frame.core}, :uses nil, :defs {mount-root {:protocol-inline nil, :meta {:file "/home/FILESERVER5/micklem/yy406/projects/go-intermod/src/cljs/gointermod/core.cljs", :line 13, :column 7, :end-line 13, :end-column 17, :arglists (quote ([]))}, :name gointermod.core/mount-root, :variadic false, :file "/home/FILESERVER5/micklem/yy406/projects/go-intermod/src/cljs/gointermod/core.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 13, :end-line 13, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, init {:protocol-inline nil, :meta {:file "/home/FILESERVER5/micklem/yy406/projects/go-intermod/src/cljs/gointermod/core.cljs", :line 17, :column 16, :end-line 17, :end-column 20, :export true, :arglists (quote ([]))}, :name gointermod.core/init, :variadic false, :file "/home/FILESERVER5/micklem/yy406/projects/go-intermod/src/cljs/gointermod/core.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 17, :end-line 17, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {reagent reagent.core, reagent.core reagent.core}, :cljs.analyzer/constants {:seen #{:initialize-db}, :order [:initialize-db]}, :doc nil}