;; Analyzed by ClojureScript 1.7.170
{:use-macros {go cljs.core.async.macros}, :excludes #{}, :name gointermod.search.handlers, :imports nil, :requires {re-frame re-frame.core, re-frame.core re-frame.core, db gointermod.db, gointermod.db gointermod.db, utils gointermod.utils.utils, gointermod.utils.utils gointermod.utils.utils, cljs.core.async cljs.core.async, comms gointermod.utils.comms, gointermod.utils.comms gointermod.utils.comms}, :uses {<! cljs.core.async}, :defs {aggregate-by-orthologue {:protocol-inline nil, :meta {:file "/home/FILESERVER5/micklem/yy406/projects/go-intermod/src/cljs/gointermod/search/handlers.cljs", :line 45, :column 7, :end-line 45, :end-column 30, :arglists (quote ([search-results]))}, :name gointermod.search.handlers/aggregate-by-orthologue, :variadic false, :file "/home/FILESERVER5/micklem/yy406/projects/go-intermod/src/cljs/gointermod/search/handlers.cljs", :end-column 30, :method-params ([search-results]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 45, :end-line 45, :max-fixed-arity 1, :fn-var true, :arglists (quote ([search-results]))}, resultset-to-map {:protocol-inline nil, :meta {:file "/home/FILESERVER5/micklem/yy406/projects/go-intermod/src/cljs/gointermod/search/handlers.cljs", :line 59, :column 7, :end-line 59, :end-column 23, :arglists (quote ([results]))}, :name gointermod.search.handlers/resultset-to-map, :variadic false, :file "/home/FILESERVER5/micklem/yy406/projects/go-intermod/src/cljs/gointermod/search/handlers.cljs", :end-column 23, :method-params ([results]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 59, :end-line 59, :max-fixed-arity 1, :fn-var true, :arglists (quote ([results]))}, result-status {:protocol-inline nil, :meta {:file "/home/FILESERVER5/micklem/yy406/projects/go-intermod/src/cljs/gointermod/search/handlers.cljs", :line 83, :column 7, :end-line 83, :end-column 20, :arglists (quote ([search-results]))}, :name gointermod.search.handlers/result-status, :variadic false, :file "/home/FILESERVER5/micklem/yy406/projects/go-intermod/src/cljs/gointermod/search/handlers.cljs", :end-column 20, :method-params ([search-results]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 83, :end-line 83, :max-fixed-arity 1, :fn-var true, :arglists (quote ([search-results]))}}, :require-macros {cljs.core.async.macros cljs.core.async.macros}, :cljs.analyzer/constants {:seen #{:save-query :original-symbol :selected-organism :ortho-secondary-id :enrich-results :ortho-organism :concat-results :set-status-loading :toggle-output-organism :select-input-organism :active-modal :else :go-term :search-term :toggle-evidence-code :organisms :perform-search :original :initialised :recur :expand-evidence-codes? :go-id :update-search-term :original-primary-id :original-organism :aggregate-heatmap-results :ortholog :success :details :loading :output? :status :is-selected? :na :ortho-db-id :checked :display-ortholog-id :display-original-id :data-set-url :error :original-db-id :query :original-id :data-set-name :original-secondary-id :evidence-codes :multi-mine-results :dataset :ontology-branch :ortho-primary-id :multi-mine-aggregate :ortho-symbol :toggle-evidence-codes :results}, :order [:toggle-evidence-codes :expand-evidence-codes? :toggle-evidence-code :evidence-codes :checked :toggle-output-organism :organisms :output? :select-input-organism :selected-organism :update-search-term :search-term :display-ortholog-id :ontology-branch :is-selected? :dataset :data-set-name :original-id :display-original-id :original-symbol :ortho-secondary-id :ortho-organism :go-term :go-id :original-primary-id :original-organism :ortho-db-id :data-set-url :original-db-id :original-secondary-id :ortho-primary-id :ortho-symbol :results :ortholog :original :error :status :details :success :set-status-loading :loading :na :concat-results :aggregate-heatmap-results :enrich-results :multi-mine-results :multi-mine-aggregate :perform-search :recur :else :initialised :save-query :query :active-modal]}, :doc nil}