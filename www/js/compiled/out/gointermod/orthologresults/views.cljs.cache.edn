;; Analyzed by ClojureScript 1.7.170
{:use-macros {go cljs.core.async.macros}, :excludes #{}, :name gointermod.orthologresults.views, :imports nil, :requires {re-frame re-frame.core, re-frame.core re-frame.core, utils gointermod.utils.utils, gointermod.utils.utils gointermod.utils.utils, comms gointermod.utils.comms, gointermod.utils.comms gointermod.utils.comms, cljs.core.async cljs.core.async}, :uses {timeout cljs.core.async, <! cljs.core.async, close! cljs.core.async, chan cljs.core.async, >! cljs.core.async, put! cljs.core.async}, :defs {headers {:protocol-inline nil, :meta {:file "/home/FILESERVER5/micklem/yy406/projects/go-intermod/src/cljs/gointermod/orthologresults/views.cljs", :line 8, :column 7, :end-line 8, :end-column 14, :arglists (quote ([]))}, :name gointermod.orthologresults.views/headers, :variadic false, :file "src/cljs/gointermod/orthologresults/views.cljs", :end-column 14, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 8, :end-line 8, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, aggregate-headers {:protocol-inline nil, :meta {:file "/home/FILESERVER5/micklem/yy406/projects/go-intermod/src/cljs/gointermod/orthologresults/views.cljs", :line 17, :column 7, :end-line 17, :end-column 24, :arglists (quote ([]))}, :name gointermod.orthologresults.views/aggregate-headers, :variadic false, :file "src/cljs/gointermod/orthologresults/views.cljs", :end-column 24, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 17, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, aggregate-results {:protocol-inline nil, :meta {:file "/home/FILESERVER5/micklem/yy406/projects/go-intermod/src/cljs/gointermod/orthologresults/views.cljs", :line 33, :column 7, :end-line 33, :end-column 24, :arglists (quote ([]))}, :name gointermod.orthologresults.views/aggregate-results, :variadic false, :file "src/cljs/gointermod/orthologresults/views.cljs", :end-column 24, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, resolve-ids {:protocol-inline nil, :meta {:file "/home/FILESERVER5/micklem/yy406/projects/go-intermod/src/cljs/gointermod/orthologresults/views.cljs", :line 56, :column 7, :end-line 56, :end-column 18, :arglists (quote ([]))}, :name gointermod.orthologresults.views/resolve-ids, :variadic false, :file "src/cljs/gointermod/orthologresults/views.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 56, :end-line 56, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, orthologs {:protocol-inline nil, :meta {:file "/home/FILESERVER5/micklem/yy406/projects/go-intermod/src/cljs/gointermod/orthologresults/views.cljs", :line 65, :column 7, :end-line 65, :end-column 16, :arglists (quote ([]))}, :name gointermod.orthologresults.views/orthologs, :variadic false, :file "src/cljs/gointermod/orthologresults/views.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 65, :end-line 65, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {cljs.core.async.macros cljs.core.async.macros}, :cljs.analyzer/constants {:seen #{:aggregate-results :thead :tbody :input-organism :key :select-ortholog-result :else :search-term :td :th :tr :th.count :recur :type :are-all-orthologs-selected? :div.ortholog-results :is-selected? :class :checked :toggle-select-all :h2 :input :td.organism :on-change :original-id :table.aggregate :td.dataset :dataset}, :order [:thead :tr :th :input :type :checked :on-change :are-all-orthologs-selected? :toggle-select-all :th.count :aggregate-results :tbody :class :td :is-selected? :select-ortholog-result :td.organism :original-id :td.dataset :dataset :key :search-term :input-organism :recur :else :div.ortholog-results :h2 :table.aggregate]}, :doc nil}