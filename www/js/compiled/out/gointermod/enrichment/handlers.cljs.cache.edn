;; Analyzed by ClojureScript 1.7.170
{:use-macros {go cljs.core.async.macros}, :excludes #{}, :name gointermod.enrichment.handlers, :imports nil, :requires {re-frame re-frame.core, re-frame.core re-frame.core, db gointermod.db, gointermod.db gointermod.db, cljs.core.async cljs.core.async}, :uses {timeout cljs.core.async, <! cljs.core.async, close! cljs.core.async, chan cljs.core.async, >! cljs.core.async, put! cljs.core.async}, :defs {enrich {:protocol-inline nil, :meta {:file "/home/FILESERVER5/micklem/yy406/projects/go-intermod/src/cljs/gointermod/enrichment/handlers.cljs", :line 10, :column 7, :end-line 10, :end-column 13, :arglists (quote ([db]))}, :name gointermod.enrichment.handlers/enrich, :variadic false, :file "/home/FILESERVER5/micklem/yy406/projects/go-intermod/src/cljs/gointermod/enrichment/handlers.cljs", :end-column 13, :method-params ([db]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 10, :max-fixed-arity 1, :fn-var true, :arglists (quote ([db]))}}, :require-macros {cljs.core.async.macros cljs.core.async.macros}, :cljs.analyzer/constants {:seen #{:enrich-results :organisms}, :order [:organisms :enrich-results]}, :doc nil}