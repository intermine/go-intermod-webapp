;; Analyzed by ClojureScript 1.7.170
{:use-macros {go cljs.core.async.macros}, :excludes #{}, :name gointermod.enrichment.handlers, :imports nil, :requires {re-frame re-frame.core, re-frame.core re-frame.core, db gointermod.db, gointermod.db gointermod.db, comms gointermod.utils.comms, gointermod.utils.comms gointermod.utils.comms, cljs.core.async cljs.core.async}, :uses {timeout cljs.core.async, <! cljs.core.async, close! cljs.core.async, chan cljs.core.async, >! cljs.core.async, put! cljs.core.async}, :defs {filter-by-branch {:protocol-inline nil, :meta {:file "/home/FILESERVER5/micklem/yy406/projects/go-intermod/src/cljs/gointermod/enrichment/handlers.cljs", :line 8, :column 7, :end-line 8, :end-column 23, :arglists (quote ([results branch]))}, :name gointermod.enrichment.handlers/filter-by-branch, :variadic false, :file "src/cljs/gointermod/enrichment/handlers.cljs", :end-column 23, :method-params ([results branch]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 8, :end-line 8, :max-fixed-arity 2, :fn-var true, :arglists (quote ([results branch]))}, get-ids {:protocol-inline nil, :meta {:file "/home/FILESERVER5/micklem/yy406/projects/go-intermod/src/cljs/gointermod/enrichment/handlers.cljs", :line 13, :column 7, :end-line 13, :end-column 14, :arglists (quote ([organism]))}, :name gointermod.enrichment.handlers/get-ids, :variadic false, :file "src/cljs/gointermod/enrichment/handlers.cljs", :end-column 14, :method-params ([organism]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 13, :end-line 13, :max-fixed-arity 1, :fn-var true, :arglists (quote ([organism]))}, sort-by-pval {:protocol-inline nil, :meta {:file "/home/FILESERVER5/micklem/yy406/projects/go-intermod/src/cljs/gointermod/enrichment/handlers.cljs", :line 22, :column 7, :end-line 22, :end-column 19, :arglists (quote ([server-response]))}, :name gointermod.enrichment.handlers/sort-by-pval, :variadic false, :file "src/cljs/gointermod/enrichment/handlers.cljs", :end-column 19, :method-params ([server-response]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 22, :end-line 22, :max-fixed-arity 1, :fn-var true, :arglists (quote ([server-response]))}, enrich {:protocol-inline nil, :meta {:file "/home/FILESERVER5/micklem/yy406/projects/go-intermod/src/cljs/gointermod/enrichment/handlers.cljs", :line 26, :column 7, :end-line 26, :end-column 13, :arglists (quote ([db]))}, :name gointermod.enrichment.handlers/enrich, :variadic false, :file "src/cljs/gointermod/enrichment/handlers.cljs", :end-column 13, :method-params ([db]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 26, :end-line 26, :max-fixed-arity 1, :fn-var true, :arglists (quote ([db]))}, refresh-enrichment-statuses {:protocol-inline nil, :meta {:file "/home/FILESERVER5/micklem/yy406/projects/go-intermod/src/cljs/gointermod/enrichment/handlers.cljs", :line 49, :column 7, :end-line 49, :end-column 34, :arglists (quote ([db]))}, :name gointermod.enrichment.handlers/refresh-enrichment-statuses, :variadic false, :file "src/cljs/gointermod/enrichment/handlers.cljs", :end-column 34, :method-params ([db]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 49, :end-line 49, :max-fixed-arity 1, :fn-var true, :arglists (quote ([db]))}}, :require-macros {cljs.core.async.macros cljs.core.async.macros}, :cljs.analyzer/constants {:seen #{:active-filter :maxp :service :test-correction :format :enrich-results :else :organisms :p-value :recur :ids :correction :widget :concat-enrichment-results :mine :loading :output? :enrichment :id :ortho-db-id :error :max-p :multi-mine-results :ontology-branch :results}, :order [:ontology-branch :multi-mine-results :active-filter :ortho-db-id :results :p-value :organisms :max-p :test-correction :id :output? :mine :service :widget :maxp :format :correction :ids :concat-enrichment-results :recur :else :error :loading :enrichment :enrich-results]}, :doc nil}