;; Analyzed by ClojureScript 1.7.170
{:use-macros nil, :excludes #{}, :name gointermod.utils.utils, :imports nil, :requires {re-frame re-frame.core, re-frame.core re-frame.core}, :uses nil, :defs {get-id {:protocol-inline nil, :meta {:file "/home/FILESERVER5/micklem/yy406/projects/go-intermod/src/cljs/gointermod/utils/utils.cljs", :line 4, :column 7, :end-line 4, :end-column 13, :arglists (quote ([resultvec original-or-ortholog] [primary secondary symbol organism])), :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([resultvec original-or-ortholog] [primary secondary symbol organism]), :arglists ([resultvec original-or-ortholog] [primary secondary symbol organism]), :arglists-meta (nil nil)}}, :name gointermod.utils.utils/get-id, :variadic false, :file "/home/FILESERVER5/micklem/yy406/projects/go-intermod/src/cljs/gointermod/utils/utils.cljs", :end-column 13, :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([resultvec original-or-ortholog] [primary secondary symbol organism]), :arglists ([resultvec original-or-ortholog] [primary secondary symbol organism]), :arglists-meta (nil nil)}, :method-params ([resultvec original-or-ortholog] [primary secondary symbol organism]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 4, :end-line 4, :max-fixed-arity 4, :fn-var true, :arglists ([resultvec original-or-ortholog] [primary secondary symbol organism])}, get-organism-details-by-name {:protocol-inline nil, :meta {:file "/home/FILESERVER5/micklem/yy406/projects/go-intermod/src/cljs/gointermod/utils/utils.cljs", :line 25, :column 7, :end-line 25, :end-column 35, :arglists (quote ([organism-name]))}, :name gointermod.utils.utils/get-organism-details-by-name, :variadic false, :file "/home/FILESERVER5/micklem/yy406/projects/go-intermod/src/cljs/gointermod/utils/utils.cljs", :end-column 35, :method-params ([organism-name]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 25, :end-line 25, :max-fixed-arity 1, :fn-var true, :arglists (quote ([organism-name]))}, get-abbrev {:protocol-inline nil, :meta {:file "/home/FILESERVER5/micklem/yy406/projects/go-intermod/src/cljs/gointermod/utils/utils.cljs", :line 33, :column 7, :end-line 33, :end-column 17, :arglists (quote ([source]))}, :name gointermod.utils.utils/get-abbrev, :variadic false, :file "/home/FILESERVER5/micklem/yy406/projects/go-intermod/src/cljs/gointermod/utils/utils.cljs", :end-column 17, :method-params ([source]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 1, :fn-var true, :arglists (quote ([source]))}, organism-name-to-id {:protocol-inline nil, :meta {:file "/home/FILESERVER5/micklem/yy406/projects/go-intermod/src/cljs/gointermod/utils/utils.cljs", :line 38, :column 7, :end-line 38, :end-column 26, :arglists (quote ([organism-name]))}, :name gointermod.utils.utils/organism-name-to-id, :variadic false, :file "/home/FILESERVER5/micklem/yy406/projects/go-intermod/src/cljs/gointermod/utils/utils.cljs", :end-column 26, :method-params ([organism-name]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 38, :end-line 38, :max-fixed-arity 1, :fn-var true, :arglists (quote ([organism-name]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:abbrev :organisms :original :ortholog :id}, :order [:ortholog :original :organisms :abbrev :id]}, :doc nil}