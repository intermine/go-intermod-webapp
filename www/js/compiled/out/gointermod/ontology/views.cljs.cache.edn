;; Analyzed by ClojureScript 1.7.170
{:use-macros {go cljs.core.async.macros}, :excludes #{}, :name gointermod.ontology.views, :imports nil, :requires {re-frame re-frame.core, re-frame.core re-frame.core, utils gointermod.utils.utils, gointermod.utils.utils gointermod.utils.utils, comms gointermod.utils.comms, gointermod.utils.comms gointermod.utils.comms, cljs.core.async cljs.core.async}, :uses {timeout cljs.core.async, <! cljs.core.async, close! cljs.core.async, chan cljs.core.async, >! cljs.core.async, put! cljs.core.async}, :defs {ontology {:protocol-inline nil, :meta {:file "/home/FILESERVER5/micklem/yy406/projects/go-intermod/src/cljs/gointermod/ontology/views.cljs", :line 9, :column 7, :end-line 9, :end-column 15, :arglists (quote ([]))}, :name gointermod.ontology.views/ontology, :variadic false, :file "/home/FILESERVER5/micklem/yy406/projects/go-intermod/src/cljs/gointermod/ontology/views.cljs", :end-column 15, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 9, :end-line 9, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {cljs.core.async.macros cljs.core.async.macros}, :cljs.analyzer/constants {:seen #{:div.ontology :src :h2 :br :img}, :order [:div.ontology :h2 :br :img :src]}, :doc nil}